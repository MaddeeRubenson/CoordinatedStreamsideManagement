"0","source('T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/functions/funHelpers.R')"
"0","source('T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/functions/funSeaKen.R')"
"0","source(""T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/functions/funClean.R"")"
"0","source(""T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/functions/funPlots.R"")"
"0","wq_limited <- read.csv('T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/app/wq_limited_df_temp_bact_ph_DO_TP_Sediment_2012.csv')"
"0","Ben_use_LU <- read.csv(""T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/Lookups/stations.csv"", na.strings = c("""", ""NA""))"
"0","##Add snapped stations"
"0","#df.all <- Snapped_Stations(df.all)"
"0","load('T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/app/NLCD2011_OR.Rdata')"
"0","load('T:/AgWQM/DataAnalysis/StatusAndTrendsRMarkdown/app/OR_cats.Rdata')"
"0","#df.all <- df.all[!is.na(df.all$Sampled), ]"
"0","sdadm <- Calculate.sdadm(df.all, ""Result"", ""Station_ID"", ""Sampled"","
"0","                           '%Y-%m-%d')"
"0","#moved seaken to after remove_qafail"
"0","SeaKen <- run_seaKen(df.all)"
"0","input <- list(action_button = c(0))"
"0","input$select <- 'North Coast'"
"0","wq_lim_whole <- extract_303d(df.all, wq_limited, input$select)"
"0","wq_lim_whole <- wq_lim_whole[,c('STREAM_LAK', 'LLID_STREA', "
"0","                                      'MILES', 'POLLUTANT', 'SEASON', "
"0","                                      'ASSESSME_1', 'CRITERIA', "
"0","                                      'LISTING_ST', 'TMDL_INFO')]"
"0","wq_lim_whole <- plyr::rename(wq_lim_whole, "
"0","                                   c('STREAM_LAK' = 'Waterbody',"
"0","                                     'LLID_STREA' = 'LLID',"
"0","                                     'ASSESSME_1' = 'Year Assessed',"
"0","                                     'LISTING_ST' = 'Listing Status'))"
"0","status <- Stations_Status(df.all)"
"0","trend <- Stations_Trend(df.all)"
"0","stns_by_year <- Stations_by_Year(df.all)"
"0","#stns <- unique(append(unique(status$Station_ID), unique(trend$Station_ID)))"
"0","# stns<- All_stns_fit_Criteria(trend = trend, "
"0","#                              #status = status,"
"0","#                              #df.all = df.all)"
"0","if(any(status != ""No stations meet Status criteria"")) {"
"0","  unique_stns <- unique(unique(as.character(status$Station_ID)))"
"0","} else if (any(status != ""No stations meet Status criteria"" & trend !=""No Stations Meet Trend Criteria""))   {"
"0","  unique_stns <- unique(append(unique(as.character(status$Station_ID)), as.character(unique(trend$Station_ID))))"
"0","} else {"
"0","  unique_stns <- NULL"
"0","}                           "
"0","stns<-unique(df.all[,c('Station_ID', 'Station_Description', 'DECIMAL_LAT', 'DECIMAL_LONG')])"
"0","if(!is.null(unique_stns)) {"
"0","  stns<-stns %>%"
"0","    dplyr::filter(Station_ID %in% unique_stns)"
"0","  stns<-unique(stns)"
"0","  #Only stations that fit the criteria"
"0","  stn_totals<-summarizeByStation(df.all)"
"0","  #stn_totals <- stn_totals[,c(1, 2,3, 8, 10, 11)] #remove nitrogen related columns"
"0","  stn_totals <- stn_totals %>% filter(Station_ID %in% unique(stns$Station_ID)) "
"0","  "
"0","  all.sp <- merge(stns[,c('Station_ID',"
"0","                          'Station_Description',"
"0","                          'DECIMAL_LAT', 'DECIMAL_LONG')], "
"0","                  stn_totals, "
"0","                  by = 'Station_ID', all.x = TRUE)"
"0","  all.sp <- all.sp[!duplicated(all.sp$Station_ID),]"
"0","  all.sp <- all.sp[!is.na(all.sp$DECIMAL_LAT & all.sp$DECIMAL_LONG),]"
"0","  coordinates(all.sp) = ~DECIMAL_LONG+DECIMAL_LAT"
"0","  proj4string(all.sp) <- CRS(""+init=epsg:4269"")"
"0","}"
"0","  "
"0","  "
"0","#print(stns)"
"0","all_stn_sp <- all_stn_sp(df.all)"
"0","stn_nlcd_df <- landUseAnalysis(all_stn_sp, cats, NLCD2011)"
